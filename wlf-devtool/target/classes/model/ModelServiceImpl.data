
package _package_.service.impl;

import com.common.PageUtil;
import _package_.entity._simpleName_;
import _package_.entity._simpleName_Example;
import _package_.mapper._simpleName_Mapper;
import _package_.service._simpleName_Service;
import com.utils.BlankUtil;
import com.utils.Page;
import com.utils.RedisUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class _simpleName_ServiceImpl implements _simpleName_Service {


    @Autowired
    private _simpleName_Mapper _lowerSimpleName_Mapper;

    @Autowired
    private RedisTemplate redisTemplate;


    @Override
    public int add_simpleName_(_simpleName_ _lowerSimpleName_) {
        _simpleName_ u = RedisUtil.add(_lowerSimpleName_, redisTemplate, "id");
        return _lowerSimpleName_Mapper.insert(u);
    }

    @Override
    public int delete_simpleName_(Long id) {
        RedisUtil.delete(redisTemplate, id, _simpleName_.class);
        return _lowerSimpleName_Mapper.deleteByPrimaryKey(id);
    }

    @Override
    public int update_simpleName_ById(_simpleName_ _lowerSimpleName_) {
        RedisUtil.update(_lowerSimpleName_, redisTemplate, "id");
        return _lowerSimpleName_Mapper.updateByPrimaryKey(_lowerSimpleName_);
    }

    @Override
    public List<_simpleName_> get_simpleName_() {
        List<_simpleName_> list = RedisUtil.getList(redisTemplate, _simpleName_.class);
        if (BlankUtil.isNotBlank(list))
            return  list;
        Page page = PageUtil.getPage();
        _simpleName_Example _lowerSimpleName_Example = new _simpleName_Example();
        _lowerSimpleName_Example.setPageEnd(page.getPageStar()+page.getPageSize()-1);
        _lowerSimpleName_Example.setPageStar(page.getPageStar());
        return  _lowerSimpleName_Mapper.selectByExample(_lowerSimpleName_Example);
//        return _lowerSimpleName_Mapper.get_simpleName_();
    }


    @Override
    public _simpleName_ get_simpleName_ById(Long id) {
        /**
         * @author wlf
         * @date 2017年08月21日 18:32
         * @param [id]
         * @return _package_.entity._simpleName_
         */
        _simpleName_ _lowerSimpleName_ = RedisUtil.getOne(id, redisTemplate, _simpleName_.class);
        return _lowerSimpleName_ == null ? _lowerSimpleName_Mapper.selectByPrimaryKey(id) : _lowerSimpleName_;
    }
}
